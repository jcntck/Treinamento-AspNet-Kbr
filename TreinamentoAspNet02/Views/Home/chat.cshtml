@model TreinamentoAspNet02.Models.AtendimentoViewModel
@{
    ViewBag.Title = "Atendimento n°" + Model.AtendimentoAtual.Id;
}
<link href="~/Content/Chat.css" rel="stylesheet" />
<link href="~/Content/sweetalert.css" rel="stylesheet" />

<div class="panel panel-default">
    <div class="panel-heading flex">
        <h2>@ViewBag.Title</h2>
    </div>
    <div class="panel-body">
        <p>Você está falando com: </p>
        <h3>@Model.Consultor.Nome</h3>
    </div>
</div>

@* Informações necessárias *@
<input type="hidden" id="idConsultor" value="@Model.Consultor.Id" />
<input type="hidden" id="idVisitante" value="@Model.Visitante.Id" />
<input type="hidden" id="nomeVisitante" value="@Model.Visitante.Nome" />
<input type="hidden" id="duracao" value="@Model.AtendimentoAtual.Duracao" />

<div class="row">
    <div class="col-lg-10">
        <div class="alert alert-danger" role="alert">
            <p><strong>AVISO:</strong> recarregar, sair ou desconectar desta página atual resultará no encerramento do atendimento. Neste caso, solicitar um novo atendimento.</p>
        </div>
    </div>
    <div id="numberCountdown" class="col-lg-2"></div>
</div>

<div class="well well-lg bg-consultor">

    <div id="areaChat">
        @* Disponível *@
        <div id="areaDisponivel">
            <div class="well well-lg bg-mensagens flex-column-reverse">
                <div id="avisos"></div>
                <div id="mensagens" style="overflow-y: scroll"></div>
            </div>
        </div>

        <small id="digitando"></small>
        <div class="flex">
            <form method="post" enctype="multipart/form-data" id="uploadFile">
                <input type="hidden" id="idAtendimento" name="idAtendimento" value="@Model.AtendimentoAtual.Id" />
                <input type="hidden" id="who" name="who" value="visitante" />
                <label class="btn btn-default btn-file">
                    <i class="glyphicon glyphicon-paperclip"></i> <input type="file" style="display: none;" name="file">
                </label>
            </form>
            <input type="text" class="col-lg-10 input-message" id="message">
            <input type="button" class="btn btn-default" id="send" value="Enviar" />
        </div>
    </div>
</div>


@section scripts {
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="~/Content/sweetalert.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        var chat = $.connection.chatHub;
        var idAtendimento = $("#idAtendimento").val();
        var idConsultor = $("#idConsultor").val();
        var idVisitante = $("#idVisitante").val();
        var nomeVisitante = $("#nomeVisitante").val();

        $(function () {

            clientsMethods(chat);

            $.connection.hub.start().done(function () {
                var target = $('#areaDisponivel');
                target.animate({
                    scrollTop: target.height()
                }, 500);

                chat.server.connect("Visitante", false, $("#idAtendimento").val());
                chat.server.joinRoom(idConsultor, nomeVisitante, false);

                $('#send').click(function () {
                    chat.server.send(nomeVisitante, $('#message').val(), idConsultor);
                    chat.server.storeMessage($('#message').val(), null, idVisitante, idAtendimento);
                    $('#message').val('').focus();
                    var target = $('#mensagens');
                    target.animate({
                        scrollTop: target.height()
                    }, 500);
                    chat.server.clean(idConsultor, idAtendimento);
                });

                $("#desconectar").click(function () {
                    chat.server.desconectar()
                    window.location.replace("/")
                });

                startTimer(chat);

                $('input[type="file"]').on('change', function (e) {
                    var arquivo = e.target.files[0].name;
                    if (e.target.files[0] && $('#idAtendimento').val()) {
                        var ext = arquivo.substr(arquivo.lastIndexOf('.'));
                        var extValidos = ['.png', '.jpg', '.docx', '.pdf', '.xls', '.xlsx', '.txt']
                        var isValido = extValidos.some((element, index, array) => { return element == ext })

                        if (isValido) {
                            var form = $('#uploadFile')[0];
                            var data = new FormData(form);

                            $.ajax({
                                url: "/Home/StoreFile",
                                type: "POST",
                                data: data,
                                enctype: 'multipart/form-data',
                                processData: false,
                                contentType: false,
                                dataType: "JSON",
                                success: function (data) {
                                    chat.server.sendFile(nomeVisitante, "~/Uploads/Atendimento" + idAtendimento + "/", data, idConsultor);
                                },
                                error: function (error) {
                                    console.log("Error: ");
                                    console.log(error);
                                }
                            })
                        } else {
                            $('#mensagens').append('<li class="item-mensagem"><p class="text-justify">Formato não é válido.</p ></li > ')
                        }

                    }
                });

                $('#message').focus();
                $('#message').keypress(function (e) {
                    if (e.which == 13) {//Enter key pressed
                        $('#send').trigger('click');//Trigger search button click event
                    } else {
                        chat.server.keyPress(nomeVisitante, idConsultor, idAtendimento);
                    }
                });

                $('#message').keyup(function () {
                    if (!textLength(this.value)) {
                        chat.server.keyPress(nomeVisitante, idConsultor, idAtendimento);
                    } else {
                        chat.server.clean(idConsultor, idAtendimento);
                    }
                })


            });

        });
        var duracao = $("#duracao").val();
        duracao = duracao * 60;
        function startTimer(chat) {
            if (duracao > 0) {
                duracao--;
                chat.server.saveTime(duracao, $('#duracao').val() * 60, idConsultor, idAtendimento);
                setTimeout('startTimer(chat)', 1000);
            }
        }

        function textLength(value) {
            var maxLength = 0;
            if (value.length > maxLength) return false;
            return true;
        }

        function clientsMethods(chat) {

            // This optional function html-encodes messages for display in the page.
            function htmlEncode(value) {
                var encodedValue = $('<div />').text(value).html();
                return encodedValue;
            }

            // Adicionar mensagens para o client
            chat.client.addNewMessageToPage = function (name, message) {
                $('#mensagens').append('<li class="item-mensagem"><p class="text-justify"><strong>' + htmlEncode(name) + '</strong>: ' + htmlEncode(message) + '</p></li>');
            };

            chat.client.addNewFileToPage = function (name, folder, filename) {
                $('#mensagens').append('<li class="item-mensagem"><p class="text-justify"><strong>' + htmlEncode(name) + '</strong>: <a href="/Home/Download?folder=' + htmlEncode(folder) + '&filename=' + htmlEncode(filename) + '"><i class="glyphicon glyphicon-download-alt"></i> Baixar arquivo</a></p></li>')
            }

            // Aviso quando visitante entrar na sala.
            chat.client.aviso = function () {
                $("#avisos").empty();
                var aviso = $("<div />", {
                    class: "alert alert-warning",
                    role: "alert"
                }).html("Atendimento iníciado, quando o tempo se esgotar você será automaticamente retirado no chat.");
                $("#avisos").append(aviso);
            }

            // Contagem regressiva;
            chat.client.timer = function (tempoRestante, tempoTotal) {
                duracao = tempoRestante;

                dateObj = new Date(tempoRestante * 1000);
                minutes = dateObj.getUTCMinutes();
                seconds = dateObj.getSeconds();

                dateObj = new Date(tempoTotal * 1000);
                dMinutes = dateObj.getUTCMinutes();
                dSeconds = dateObj.getSeconds();

                try {
                    var tempoRestante = $("<span />", {
                        class: "h3"
                    }).html(minutes.toString().padStart(2, '0') + ':' + seconds.toString().padStart(2, '0') + " | <span class='text-success'>" + dMinutes.toString().padStart(2, '0') + ':' + dSeconds.toString().padStart(2, '0') + "</span>");

                    $('#numberCountdown').html(tempoRestante);
                } catch (err) {
                    var tempoRestante = $("<span />", {
                        class: "h3"
                    }).html(minutes.toString() + ':' + seconds.toString() + " | <span class='text-success'>" + dMinutes.toString() + ':' + dSeconds.toString() + "</span>");

                    $('#numberCountdown').html(tempoRestante);
                }
            }

            // Encerrar atendimento quando acabar o tempo
            chat.client.encerrarAtendimento = function () {
                window.location.replace("/")
            }

            chat.client.digitando = function (nome) {
                $("#digitando").html(nome + " está digitando...");
            }

            chat.client.clean = function () {
                $("#digitando").empty();
            }
        }
    </script>
}