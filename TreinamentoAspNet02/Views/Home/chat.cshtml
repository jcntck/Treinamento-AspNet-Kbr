@model TreinamentoAspNet02.Models.AtendimentoViewModel
@{
    ViewBag.Title = "Atendimento n°" + Model.AtendimentoAtual.Id;
}
<link href="~/Content/Chat.css" rel="stylesheet" />
<link href="~/Content/sweetalert.css" rel="stylesheet" />

<div class="panel panel-default">
    <div class="panel-heading flex">
        <h2>@ViewBag.Title</h2>
    </div>
    <div class="panel-body">
        <p>Você está falando com: </p>
        <h3>@Model.Consultor.Nome</h3>
    </div>
</div>

@* Informações necessárias *@
<input type="hidden" id="idAtendimento" value="@Model.AtendimentoAtual.Id" />
<input type="hidden" id="idConsultor" value="@Model.Consultor.Id" />
<input type="hidden" id="idVisitante" value="@Model.Visitante.Id" />
<input type="hidden" id="nomeVisitante" value="@Model.Visitante.Nome" />
<input type="hidden" id="duracao" value="@Model.AtendimentoAtual.Duracao" />

@* provisório *@
<span>* Temporário *</span>
<button class="btn btn-default" id="desconectar">Desconectar</button>

<div class="well well-lg bg-consultor">
    <div id="numberCountdown" class="flex-duracao"></div>
    <div id="areaChat">
        @* Disponível *@
        <div id="areaDisponivel">
            <div class="well well-lg bg-mensagens flex-column-reverse">
                <div id="avisos"></div>
                <div id="mensagens" style="overflow-y: scroll"></div>
            </div>

            <div class="flex">
                <input type="text" class="col-lg-10 input-message" id="message">
                <input type="button" class="btn btn-default" id="send" value="Enviar" />
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="~/Content/sweetalert.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        $(function () {
            var chat = $.connection.chatHub;
            var idAtendimento = $("#idAtendimento").val();
            var idConsultor = $("#idConsultor").val();
            var idVisitante = $("#idVisitante").val();
            var nomeVisitante = $("#nomeVisitante").val();

            clientsMethods(chat);
            startCountdown();

            $.connection.hub.start().done(function () {

                chat.server.connect("Visitante", false, $("#idAtendimento").val());
                chat.server.joinRoom(idConsultor, nomeVisitante, false);

                $('#sendmessage').click(function () {
                    chat.server.send(nomeVisitante, $('#message').val(), idConsultor);
                    chat.server.storeMessage($('#message').val(), null, idVisitante, idAtendimento);
                    $('#message').val('').focus();
                });

                $("#desconectar").click(function () {
                    chat.server.desconectar()
                    window.location.replace("/")
                });

            });

            $('#message').focus();
            $('#message').keypress(function (e) {
                if (e.which == 13) {//Enter key pressed
                    $('#sendmessage').trigger('click');//Trigger search button click event
                }
            });

        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        function clientsMethods(chat) {

            // Adicionar mensagens para o client
            chat.client.addNewMessageToPage = function (name, message) {
                $('#discussion').append('<li><strong>' + htmlEncode(name) + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            // Aviso quando visitante entrar na sala.
            chat.client.aviso = function () {
                $("#avisos").empty();
                var aviso = $("<div />", {
                    class: "alert alert-warning",
                    role: "alert"
                }).html("Atendimento iníciado, quando o tempo se esgotar você será automaticamente retirado no chat. <strong>AVISO:</strong> caso você saia ou desconecte o atendimento será encerrado.");
                $("#avisos").append(aviso);
            }

        }

        // temporário

        var g_iCount = new Number();

        // de 30 a 0 //
        var g_iCount = parseInt($("#duracao").val()) * 60;

        function startCountdown() {
            if ((g_iCount - 1) >= 0) {
                g_iCount = g_iCount - 1;

                dateObj = new Date(g_iCount * 1000);
                minutes = dateObj.getUTCMinutes();
                seconds = dateObj.getSeconds();

                numberCountdown.innerText = minutes.toString().padStart(2, '0') + ':' + seconds.toString().padStart(2, '0');
                setTimeout('startCountdown()', 1000);
            }
        }
    </script>
}